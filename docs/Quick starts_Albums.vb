'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.1318
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports Worm.Orm

'This file was generated by OrmCodeGen v1.0.2708.32807 application(OrmCodeGenLib v1.0.2708.32806).
'
'By user 'alex' at 04.06.2007 11:57:07.
'
'
Namespace Autogenerated
	
	<Worm.Orm.EntityAttribute(GetType(Autogenerated.Albums.AlbumsSchemaDef), "1", EntityName:="Albums")>  _
	Public Class Albums
		Inherits Worm.Orm.OrmBaseT(Of Albums)
		Implements Worm.Orm.IOrmEditable(Of Albums)
		
		#Region "Private Fields"
		Private _id As Integer
		
		Private _name As String
		
		Private _release As System.Nullable(Of Date)
		#End Region
		
		#Region "Properties"
		<Worm.Orm.ColumnAttribute()>  _
		Public Property Id() As Integer
			Get
Using Me.SyncHelper(true, "Id")
    Return Me._id
End Using
			End Get
			Set
Using Me.SyncHelper(false, "Id")
    Me._id = value
End Using
			End Set
		End Property
		
		<Worm.Orm.ColumnAttribute()>  _
		Public Property Name() As String
			Get
Using Me.SyncHelper(true, "Name")
    Return Me._name
End Using
			End Get
			Set
Using Me.SyncHelper(false, "Name")
    Me._name = value
End Using
			End Set
		End Property
		
		<Worm.Orm.ColumnAttribute()>  _
		Public Property Release() As System.Nullable(Of Date)
			Get
Using Me.SyncHelper(true, "Release")
    Return Me._release
End Using
			End Get
			Set
Using Me.SyncHelper(false, "Release")
    Me._release = value
End Using
			End Set
		End Property
		#End Region
		
		Public Overridable Sub CopyBody(ByVal from As Albums, ByVal [to] As Albums) Implements Worm.Orm.IOrmEditable(Of Albums).CopyBody
			[to]._id = from._id
			[to]._name = from._name
			[to]._release = from._release
		End Sub
		
		Public Overrides Sub SetValue(ByVal pi As System.Reflection.PropertyInfo, ByVal c As Worm.Orm.ColumnAttribute, ByVal value As Object)
			If (c.FieldName = "Id") Then
				Me._id = CType(value,Integer)
				Return
			End If
			If (c.FieldName = "Name") Then
				Me._name = CType(value,String)
				Return
			End If
			If (c.FieldName = "Release") Then
				Me._release = CType(value,System.Nullable(Of Date))
				Return
			End If
			MyBase.SetValue(pi, c, value)
		End Sub
		
		#Region "Nested Types"
		Public Class AlbumsSchemaDef
			Implements Worm.Orm.IOrmObjectSchema, Worm.Orm.IOrmSchemaInit
			
			#Region "Private Fields"
			Private _idx As Worm.Orm.Collections.IndexedCollection(Of String, Worm.Orm.MapField2Column)
			
			Private _tables() As Worm.Orm.OrmTable
			
			Private _forTablesLock As Object = New Object
			
			Private _m2mRelations() As Worm.Orm.M2MRelation
			
			Private _forM2MRelationsLock As Object = New Object
			
			Private _forIdxLock As Object = New Object
			
			Protected _schema As Worm.Orm.OrmSchemaBase
			
			Protected _entityType As System.Type
			#End Region
			
			Protected Overridable Function GetTypeMainTable(ByVal type As System.Type) As Worm.Orm.OrmTable
				Dim tables() As Worm.Orm.OrmTable
				tables = CType(Me._schema,Worm.Orm.IDbSchema).GetTables(type)
				Return CType(tables.GetValue(0),Worm.Orm.OrmTable)
			End Function
			
			Public Overridable Function GetTables() As Worm.Orm.OrmTable() Implements Worm.Orm.IOrmObjectSchema.GetTables
				If (Me._tables Is Nothing) Then
					Dim lockCachedExpression_65762f9eff6a448a961b7a845666df1a As Object = Me._forTablesLock
					System.Threading.Monitor.Enter(lockCachedExpression_65762f9eff6a448a961b7a845666df1a)
					Try 
						If (Me._tables Is Nothing) Then
							Me._tables = New Worm.Orm.OrmTable() {New Worm.Orm.OrmTable("[dbo].[Albums]")}
						End If
					Finally
						System.Threading.Monitor.Exit(lockCachedExpression_65762f9eff6a448a961b7a845666df1a)
					End Try
				End If
				Return Me._tables
			End Function
			
			Protected Overridable Function GetTable(ByVal tbl As Autogenerated.Albums.AlbumsSchemaDef.TablesLink) As Worm.Orm.OrmTable
				Return CType(Me.GetTables.GetValue(CType(tbl,Integer)),Worm.Orm.OrmTable)
			End Function
			
			Public Overridable Function ChangeValueType(ByVal c As Worm.Orm.ColumnAttribute, ByVal value As Object, ByRef newvalue As Object) As Boolean Implements Worm.Orm.IOrmObjectSchema.ChangeValueType
				If (((c._behavior And Field2DbRelations.InsertDefault)  _
							= Field2DbRelations.InsertDefault)  _
							AndAlso ((value Is Nothing)  _
							OrElse (value Is System.Activator.CreateInstance(value.GetType)))) Then
					newvalue = System.DBNull.Value
					Return true
				End If
				newvalue = value
				Return false
			End Function
			
			Public Overridable Function GetJoins(ByVal left As Worm.Orm.OrmTable, ByVal right As Worm.Orm.OrmTable) As Worm.Orm.OrmJoin Implements Worm.Orm.IOrmObjectSchema.GetJoins
				Return CType(Nothing, Worm.Orm.OrmJoin)
			End Function
			
			Public Overridable Function GetSuppressedColumns() As Worm.Orm.ColumnAttribute() Implements Worm.Orm.IOrmObjectSchema.GetSuppressedColumns
				Return New Worm.Orm.ColumnAttribute(-1) {}
			End Function
			
			Public Overridable Function GetFilter(ByVal filter_info As Object) As Worm.Orm.IOrmFilter Implements Worm.Orm.IOrmObjectSchema.GetFilter
				Return Nothing
			End Function
			
			Public Overridable Function GetM2MRelations() As Worm.Orm.M2MRelation() Implements Worm.Orm.IOrmObjectSchema.GetM2MRelations
				If (Me._m2mRelations Is Nothing) Then
					Dim lockCachedExpression_f57bf6698c6140c89741febf52b1a79b As Object = Me._forM2MRelationsLock
					System.Threading.Monitor.Enter(lockCachedExpression_f57bf6698c6140c89741febf52b1a79b)
					Try 
						If (Me._m2mRelations Is Nothing) Then
							Dim m2mRelations(-1) As Worm.Orm.M2MRelation
							Me._m2mRelations = m2mRelations
						End If
					Finally
						System.Threading.Monitor.Exit(lockCachedExpression_f57bf6698c6140c89741febf52b1a79b)
					End Try
				End If
				Return Me._m2mRelations
			End Function
			
			Public Overridable Function GetFieldColumnMap() As Worm.Orm.Collections.IndexedCollection(Of String, Worm.Orm.MapField2Column) Implements Worm.Orm.IOrmObjectSchema.GetFieldColumnMap
				If (Me._idx Is Nothing) Then
					Dim lockCachedExpression_6c882777d36b4913b4ade77c02b902f2 As Object = Me._forIdxLock
					System.Threading.Monitor.Enter(lockCachedExpression_6c882777d36b4913b4ade77c02b902f2)
					Try 
						If (Me._idx Is Nothing) Then
							Dim idx As Worm.Orm.Collections.IndexedCollection(Of String, Worm.Orm.MapField2Column) = New Worm.Orm.OrmObjectIndex
							idx.Add(New Worm.Orm.MapField2Column("Id", "id", Me.GetTable(Autogenerated.Albums.AlbumsSchemaDef.TablesLink.tbldboAlbums)))
							idx.Add(New Worm.Orm.MapField2Column("Name", "name", Me.GetTable(Autogenerated.Albums.AlbumsSchemaDef.TablesLink.tbldboAlbums)))
							idx.Add(New Worm.Orm.MapField2Column("Release", "release_dt", Me.GetTable(Autogenerated.Albums.AlbumsSchemaDef.TablesLink.tbldboAlbums)))
							Me._idx = idx
						End If
					Finally
						System.Threading.Monitor.Exit(lockCachedExpression_6c882777d36b4913b4ade77c02b902f2)
					End Try
				End If
				Return Me._idx
			End Function
			
			Public Overridable Sub GetSchema(ByVal schema As Worm.Orm.OrmSchemaBase, ByVal t As System.Type) Implements Worm.Orm.IOrmSchemaInit.GetSchema
				Me._schema = schema
				Me._entityType = t
			End Sub
			
			#Region "Nested Types"
			Public Enum TablesLink
				
				tbldboAlbums = 0
			End Enum
			#End Region
		End Class
		#End Region
	End Class
End Namespace
